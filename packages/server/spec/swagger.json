{
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"Balance": {
				"properties": {
					"free": {
						"type": "number",
						"format": "double"
					},
					"used": {
						"type": "number",
						"format": "double"
					},
					"total": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"free",
					"used",
					"total"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Balances": {
				"properties": {
					"info": {}
				},
				"required": [
					"info"
				],
				"type": "object",
				"additionalProperties": {
					"$ref": "#/components/schemas/Balance"
				}
			},
			"StrategyError": {
				"properties": {
					"timestamp": {
						"type": "number",
						"format": "double"
					},
					"message": {
						"type": "string"
					},
					"balance": {
						"$ref": "#/components/schemas/Balances"
					}
				},
				"required": [
					"timestamp",
					"message",
					"balance"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Fee": {
				"properties": {
					"type": {
						"type": "string",
						"enum": [
							"taker",
							"maker"
						]
					},
					"currency": {
						"type": "string"
					},
					"rate": {
						"type": "number",
						"format": "double"
					},
					"cost": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"type",
					"currency",
					"rate",
					"cost"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Trade": {
				"properties": {
					"amount": {
						"type": "number",
						"format": "double"
					},
					"datetime": {
						"type": "string"
					},
					"id": {
						"type": "string"
					},
					"info": {},
					"order": {
						"type": "string"
					},
					"price": {
						"type": "number",
						"format": "double"
					},
					"timestamp": {
						"type": "number",
						"format": "double"
					},
					"type": {
						"type": "string"
					},
					"side": {
						"type": "string",
						"enum": [
							"buy",
							"sell"
						]
					},
					"symbol": {
						"type": "string"
					},
					"takerOrMaker": {
						"type": "string",
						"enum": [
							"taker",
							"maker"
						]
					},
					"cost": {
						"type": "number",
						"format": "double"
					},
					"fee": {
						"$ref": "#/components/schemas/Fee"
					}
				},
				"required": [
					"amount",
					"datetime",
					"id",
					"info",
					"price",
					"timestamp",
					"side",
					"symbol",
					"takerOrMaker",
					"cost",
					"fee"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Order": {
				"properties": {
					"id": {
						"type": "string"
					},
					"clientOrderId": {
						"type": "string"
					},
					"datetime": {
						"type": "string"
					},
					"timestamp": {
						"type": "number",
						"format": "double"
					},
					"lastTradeTimestamp": {
						"type": "number",
						"format": "double"
					},
					"status": {
						"type": "string",
						"enum": [
							"open",
							"closed",
							"canceled"
						]
					},
					"symbol": {
						"type": "string"
					},
					"type": {
						"type": "string"
					},
					"timeInForce": {
						"type": "string"
					},
					"side": {
						"type": "string",
						"enum": [
							"buy",
							"sell"
						]
					},
					"price": {
						"type": "number",
						"format": "double"
					},
					"average": {
						"type": "number",
						"format": "double"
					},
					"amount": {
						"type": "number",
						"format": "double"
					},
					"filled": {
						"type": "number",
						"format": "double"
					},
					"remaining": {
						"type": "number",
						"format": "double"
					},
					"cost": {
						"type": "number",
						"format": "double"
					},
					"trades": {
						"items": {
							"$ref": "#/components/schemas/Trade"
						},
						"type": "array"
					},
					"fee": {
						"$ref": "#/components/schemas/Fee"
					},
					"info": {}
				},
				"required": [
					"id",
					"clientOrderId",
					"datetime",
					"timestamp",
					"lastTradeTimestamp",
					"status",
					"symbol",
					"type",
					"side",
					"price",
					"amount",
					"filled",
					"remaining",
					"cost",
					"trades",
					"fee",
					"info"
				],
				"type": "object",
				"additionalProperties": false
			},
			"BacktestResults": {
				"properties": {
					"errors": {
						"items": {
							"$ref": "#/components/schemas/StrategyError"
						},
						"type": "array"
					},
					"openOrders": {
						"items": {
							"$ref": "#/components/schemas/Order"
						},
						"type": "array"
					},
					"closedOrders": {
						"items": {
							"$ref": "#/components/schemas/Order"
						},
						"type": "array"
					},
					"balance": {
						"$ref": "#/components/schemas/Balances"
					}
				},
				"required": [
					"errors",
					"openOrders",
					"closedOrders",
					"balance"
				],
				"type": "object",
				"additionalProperties": false
			},
			"OHLCV_Candle": {
				"properties": {
					"timestamp": {
						"type": "number",
						"format": "double"
					},
					"open": {
						"type": "number",
						"format": "double"
					},
					"high": {
						"type": "number",
						"format": "double"
					},
					"low": {
						"type": "number",
						"format": "double"
					},
					"close": {
						"type": "number",
						"format": "double"
					},
					"volume": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"timestamp",
					"open",
					"high",
					"low",
					"close",
					"volume"
				],
				"type": "object",
				"additionalProperties": false
			},
			"CreateBacktestResult": {
				"properties": {
					"results": {
						"$ref": "#/components/schemas/BacktestResults"
					},
					"candles": {
						"items": {
							"$ref": "#/components/schemas/OHLCV_Candle"
						},
						"type": "array"
					}
				},
				"required": [
					"results",
					"candles"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ExchangeIDs": {
				"enum": [
					"binance",
					"kucoin",
					"bitfinex"
				],
				"type": "string"
			},
			"CreateBacktestOptions": {
				"properties": {
					"strategyPath": {
						"type": "string"
					},
					"exchange": {
						"$ref": "#/components/schemas/ExchangeIDs"
					},
					"period": {
						"type": "string"
					},
					"pair": {
						"type": "string"
					},
					"from": {
						"type": "number",
						"format": "double"
					},
					"to": {
						"type": "number",
						"format": "double"
					},
					"initialBalance": {
						"properties": {},
						"additionalProperties": {
							"type": "number",
							"format": "double"
						},
						"type": "object"
					}
				},
				"required": [
					"strategyPath",
					"exchange",
					"period",
					"pair",
					"from",
					"to",
					"initialBalance"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ExchangeStatuses": {
				"properties": {
					"binance": {
						"type": "boolean"
					},
					"kucoin": {
						"type": "boolean"
					},
					"bitfinex": {
						"type": "boolean"
					}
				},
				"type": "object"
			},
			"MinMax": {
				"properties": {
					"min": {
						"type": "number",
						"format": "double"
					},
					"max": {
						"type": "number",
						"format": "double",
						"nullable": true
					}
				},
				"required": [
					"min",
					"max"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Market": {
				"properties": {
					"id": {
						"type": "string"
					},
					"symbol": {
						"type": "string"
					},
					"base": {
						"type": "string"
					},
					"quote": {
						"type": "string"
					},
					"baseId": {
						"type": "string"
					},
					"quoteId": {
						"type": "string"
					},
					"type": {
						"type": "string"
					},
					"spot": {
						"type": "boolean"
					},
					"margin": {
						"type": "boolean"
					},
					"swap": {
						"type": "boolean"
					},
					"future": {
						"type": "boolean"
					},
					"active": {
						"type": "boolean"
					},
					"precision": {
						"properties": {
							"price": {
								"type": "number",
								"format": "double"
							},
							"amount": {
								"type": "number",
								"format": "double"
							},
							"quote": {
								"type": "number",
								"format": "double"
							},
							"base": {
								"type": "number",
								"format": "double"
							}
						},
						"required": [
							"price",
							"amount",
							"quote",
							"base"
						],
						"type": "object"
					},
					"limits": {
						"properties": {
							"cost": {
								"$ref": "#/components/schemas/MinMax"
							},
							"price": {
								"$ref": "#/components/schemas/MinMax"
							},
							"amount": {
								"$ref": "#/components/schemas/MinMax"
							}
						},
						"required": [
							"price",
							"amount"
						],
						"type": "object"
					},
					"tierBased": {
						"type": "boolean"
					},
					"percentage": {
						"type": "boolean"
					},
					"taker": {
						"type": "number",
						"format": "double"
					},
					"maker": {
						"type": "number",
						"format": "double"
					},
					"info": {}
				},
				"required": [
					"id",
					"symbol",
					"base",
					"quote",
					"baseId",
					"quoteId",
					"active",
					"precision",
					"limits",
					"tierBased",
					"percentage",
					"taker",
					"maker",
					"info"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IDictionary_number-or-string_": {
				"description": "Represents an associative array of a same type.",
				"properties": {},
				"type": "object",
				"additionalProperties": {
					"anyOf": [
						{
							"type": "number",
							"format": "double"
						},
						{
							"type": "string"
						}
					]
				}
			},
			"Currency": {
				"properties": {
					"id": {
						"type": "string"
					},
					"code": {
						"type": "string"
					},
					"numericId": {
						"type": "number",
						"format": "double"
					},
					"precision": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"id",
					"code",
					"precision"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IDictionary_Currency_": {
				"description": "Represents an associative array of a same type.",
				"properties": {},
				"type": "object",
				"additionalProperties": {
					"$ref": "#/components/schemas/Currency"
				}
			},
			"StrategyLanguages": {
				"enum": [
					"JavaScript",
					"TypeScript"
				],
				"type": "string"
			},
			"StrategyMetaData": {
				"properties": {
					"name": {
						"type": "string"
					},
					"path": {
						"type": "string"
					},
					"indexFile": {
						"type": "string"
					},
					"language": {
						"$ref": "#/components/schemas/StrategyLanguages"
					}
				},
				"required": [
					"name",
					"path",
					"indexFile",
					"language"
				],
				"type": "object",
				"additionalProperties": false
			},
			"EditorLanguages": {
				"enum": [
					"JavaScript",
					"TypeScript",
					"JSON",
					"Text"
				],
				"type": "string"
			},
			"StrategyFile": {
				"properties": {
					"modifiedAt": {
						"type": "number",
						"format": "double"
					},
					"path": {
						"type": "string"
					},
					"basename": {
						"type": "string"
					},
					"extension": {
						"type": "string"
					},
					"contents": {
						"type": "string"
					},
					"language": {
						"$ref": "#/components/schemas/EditorLanguages"
					}
				},
				"required": [
					"modifiedAt",
					"path",
					"basename",
					"extension",
					"contents"
				],
				"type": "object",
				"additionalProperties": false
			},
			"FileStructure": {
				"properties": {
					"language": {
						"$ref": "#/components/schemas/EditorLanguages"
					},
					"children": {
						"items": {
							"$ref": "#/components/schemas/FileStructure"
						},
						"type": "array"
					},
					"fullPath": {
						"type": "string"
					},
					"id": {
						"type": "string"
					},
					"name": {
						"type": "string"
					}
				},
				"required": [
					"fullPath",
					"id",
					"name"
				],
				"type": "object"
			}
		},
		"securitySchemes": {}
	},
	"info": {
		"title": "@algotia/server",
		"version": "1.0.0-alpha.0",
		"license": {
			"name": "AGPL-3.0"
		},
		"contact": {}
	},
	"openapi": "3.0.0",
	"paths": {
		"/backtest": {
			"post": {
				"operationId": "CreateBacktest",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/CreateBacktestResult"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CreateBacktestOptions"
							}
						}
					}
				}
			}
		},
		"/config": {
			"get": {
				"operationId": "GetAllConfigOptions",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"security": [],
				"parameters": []
			}
		},
		"/config/{key}": {
			"get": {
				"operationId": "GetConfigOptionByKey",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"type": "string"
										},
										{
											"type": "number",
											"format": "double"
										}
									]
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "key",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/exchange/ids": {
			"get": {
				"operationId": "GetExchangeIds",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/ExchangeIDs"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": []
			}
		},
		"/exchange/statuses": {
			"get": {
				"operationId": "GetExchangeStatuses",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ExchangeStatuses"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": []
			}
		},
		"/exchange/{id}/market": {
			"get": {
				"operationId": "GetMarket",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Market"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"$ref": "#/components/schemas/ExchangeIDs"
						}
					},
					{
						"in": "query",
						"name": "pair",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/exchange/{id}/timeframes": {
			"get": {
				"operationId": "GetTimeFrames",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IDictionary_number-or-string_"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"$ref": "#/components/schemas/ExchangeIDs"
						}
					}
				]
			}
		},
		"/exchange/{id}/pairs": {
			"get": {
				"operationId": "GetPairs",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"type": "string"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"$ref": "#/components/schemas/ExchangeIDs"
						}
					}
				]
			}
		},
		"/exchange/{id}/currencies": {
			"get": {
				"operationId": "GetCurrencies",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IDictionary_Currency_"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"$ref": "#/components/schemas/ExchangeIDs"
						}
					}
				]
			}
		},
		"/strategy": {
			"get": {
				"operationId": "GetAllStrategies",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/StrategyMetaData"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": []
			}
		},
		"/strategy/file/{fileName}": {
			"get": {
				"operationId": "ReadStrategyFile",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/StrategyFile"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "fileName",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/strategy/dir/{strategyDir}": {
			"get": {
				"operationId": "ReadStrategyDir",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/FileStructure"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "strategyDir",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/strategy/file": {
			"post": {
				"operationId": "WriteStrategyFile",
				"responses": {
					"204": {
						"description": "No content"
					}
				},
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"path": {
										"type": "string"
									},
									"contents": {
										"type": "string"
									}
								},
								"required": [
									"path",
									"contents"
								],
								"type": "object"
							}
						}
					}
				}
			}
		}
	},
	"servers": [
		{
			"url": "http://localhost:2008/api"
		}
	]
}