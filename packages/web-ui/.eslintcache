[{"/home/jake/Documents/Code/Algotia/web-ui-2/src/index.tsx":"1","/home/jake/Documents/Code/Algotia/web-ui-2/src/App.tsx":"2","/home/jake/Documents/Code/Algotia/web-ui-2/src/assets/styles/index.ts":"3","/home/jake/Documents/Code/Algotia/web-ui-2/src/pages/init/init.tsx":"4","/home/jake/Documents/Code/Algotia/web-ui-2/src/components/layout/Layout.tsx":"5","/home/jake/Documents/Code/Algotia/web-ui-2/src/pages/index.ts":"6","/home/jake/Documents/Code/Algotia/web-ui-2/src/assets/styles/theme.ts":"7","/home/jake/Documents/Code/Algotia/web-ui-2/src/assets/styles/reset.tsx":"8","/home/jake/Documents/Code/Algotia/web-ui-2/src/components/layout/Header.tsx":"9","/home/jake/Documents/Code/Algotia/web-ui-2/src/components/layout/SideBar.tsx":"10","/home/jake/Documents/Code/Algotia/web-ui-2/src/components/layout/Footer.tsx":"11","/home/jake/Documents/Code/Algotia/web-ui-2/src/components/shared/index.ts":"12","/home/jake/Documents/Code/Algotia/web-ui-2/src/pages/backtest/index.ts":"13","/home/jake/Documents/Code/Algotia/web-ui-2/src/components/shared/form.tsx":"14","/home/jake/Documents/Code/Algotia/web-ui-2/src/components/shared/utils.tsx":"15","/home/jake/Documents/Code/Algotia/web-ui-2/src/pages/backtest/backtest.tsx":"16","/home/jake/Documents/Code/Algotia/web-ui-2/src/components/shared/strategyEditor/index.ts":"17","/home/jake/Documents/Code/Algotia/web-ui-2/src/pages/backtest/chart.tsx":"18","/home/jake/Documents/Code/Algotia/web-ui-2/src/components/shared/strategyEditor/strategyEditor.tsx":"19","/home/jake/Documents/Code/Algotia/web-ui-2/src/pages/backtest/editor.tsx":"20","/home/jake/Documents/Code/Algotia/web-ui-2/src/components/shared/strategyEditor/topBar.tsx":"21","/home/jake/Documents/Code/Algotia/web-ui-2/src/pages/backtest/form/selectInitialBalance.tsx":"22","/home/jake/Documents/Code/Algotia/web-ui-2/src/pages/backtest/form/selectPeriod.tsx":"23","/home/jake/Documents/Code/Algotia/web-ui-2/src/pages/backtest/form/selectPair.tsx":"24","/home/jake/Documents/Code/Algotia/web-ui-2/src/pages/backtest/form/index.tsx":"25","/home/jake/Documents/Code/Algotia/web-ui-2/src/components/index.ts":"26","/home/jake/Documents/Code/Algotia/web-ui-2/src/pages/backtest/form/selectExchange.tsx":"27","/home/jake/Documents/Code/Algotia/web-ui-2/src/pages/backtest/form/selectDates.tsx":"28","/home/jake/Documents/Code/Algotia/web-ui-2/src/components/layout/index.ts":"29","/home/jake/Documents/Code/Algotia/web-ui-2/src/pages/backtest/results/index.ts":"30","/home/jake/Documents/Code/Algotia/web-ui-2/src/pages/backtest/results/results.tsx":"31","/home/jake/Documents/Code/Algotia/web-ui-2/src/pages/backtest/results/balance.tsx":"32","/home/jake/Documents/Code/Algotia/web-ui-2/src/components/shared/strategyEditor/defaultValue.ts":"33","/home/jake/Documents/Code/Algotia/web-ui-2/src/pages/backtest/results/table.tsx":"34","/home/jake/Documents/Code/Algotia/web-ui-2/src/pages/backtest/form/form.tsx":"35","/home/jake/Documents/Code/Algotia/web-ui-2/src/assets/editor_types/index.js":"36","/home/jake/Documents/Code/Algotia/web-ui-2/src/assets/editor_types/ccxt.js":"37","/home/jake/Documents/Code/Algotia/web-ui-2/src/assets/editor_types/_base.js":"38","/home/jake/Documents/Code/Algotia/web-ui-2/src/assets/editor_types/_assert.js":"39","/home/jake/Documents/Code/Algotia/web-ui-2/src/assets/editor_types/_buffer.js":"40","/home/jake/Documents/Code/Algotia/web-ui-2/src/assets/editor_types/_async_hooks.js":"41","/home/jake/Documents/Code/Algotia/web-ui-2/src/assets/editor_types/_console.js":"42","/home/jake/Documents/Code/Algotia/web-ui-2/src/assets/editor_types/_dgram.js":"43","/home/jake/Documents/Code/Algotia/web-ui-2/src/assets/editor_types/_cluster.js":"44","/home/jake/Documents/Code/Algotia/web-ui-2/src/assets/editor_types/_constants.js":"45","/home/jake/Documents/Code/Algotia/web-ui-2/src/assets/editor_types/_child_process.js":"46","/home/jake/Documents/Code/Algotia/web-ui-2/src/assets/editor_types/_events.js":"47","/home/jake/Documents/Code/Algotia/web-ui-2/src/assets/editor_types/_globals_global.js":"48","/home/jake/Documents/Code/Algotia/web-ui-2/src/assets/editor_types/_domain.js":"49","/home/jake/Documents/Code/Algotia/web-ui-2/src/assets/editor_types/_dns.js":"50","/home/jake/Documents/Code/Algotia/web-ui-2/src/assets/editor_types/_https.js":"51","/home/jake/Documents/Code/Algotia/web-ui-2/src/assets/editor_types/_index.js":"52","/home/jake/Documents/Code/Algotia/web-ui-2/src/assets/editor_types/_http.js":"53","/home/jake/Documents/Code/Algotia/web-ui-2/src/assets/editor_types/_crypto.js":"54","/home/jake/Documents/Code/Algotia/web-ui-2/src/assets/editor_types/_globals.js":"55","/home/jake/Documents/Code/Algotia/web-ui-2/src/assets/editor_types/_module.js":"56","/home/jake/Documents/Code/Algotia/web-ui-2/src/assets/editor_types/_net.js":"57","/home/jake/Documents/Code/Algotia/web-ui-2/src/assets/editor_types/_os.js":"58","/home/jake/Documents/Code/Algotia/web-ui-2/src/assets/editor_types/_path.js":"59","/home/jake/Documents/Code/Algotia/web-ui-2/src/assets/editor_types/_process.js":"60","/home/jake/Documents/Code/Algotia/web-ui-2/src/assets/editor_types/_perf_hooks.js":"61","/home/jake/Documents/Code/Algotia/web-ui-2/src/assets/editor_types/_querystring.js":"62","/home/jake/Documents/Code/Algotia/web-ui-2/src/assets/editor_types/_readline.js":"63","/home/jake/Documents/Code/Algotia/web-ui-2/src/assets/editor_types/_http2.js":"64","/home/jake/Documents/Code/Algotia/web-ui-2/src/assets/editor_types/_punycode.js":"65","/home/jake/Documents/Code/Algotia/web-ui-2/src/assets/editor_types/_repl.js":"66","/home/jake/Documents/Code/Algotia/web-ui-2/src/assets/editor_types/_string_decoder.js":"67","/home/jake/Documents/Code/Algotia/web-ui-2/src/assets/editor_types/_stream.js":"68","/home/jake/Documents/Code/Algotia/web-ui-2/src/assets/editor_types/_timers.js":"69","/home/jake/Documents/Code/Algotia/web-ui-2/src/assets/editor_types/_trace_events.js":"70","/home/jake/Documents/Code/Algotia/web-ui-2/src/assets/editor_types/_fs.js":"71","/home/jake/Documents/Code/Algotia/web-ui-2/src/assets/editor_types/_tty.js":"72","/home/jake/Documents/Code/Algotia/web-ui-2/src/assets/editor_types/_util.js":"73","/home/jake/Documents/Code/Algotia/web-ui-2/src/assets/editor_types/_v8.js":"74","/home/jake/Documents/Code/Algotia/web-ui-2/src/assets/editor_types/_url.js":"75","/home/jake/Documents/Code/Algotia/web-ui-2/src/assets/editor_types/_vm.js":"76","/home/jake/Documents/Code/Algotia/web-ui-2/src/assets/editor_types/_tls.js":"77","/home/jake/Documents/Code/Algotia/web-ui-2/src/assets/editor_types/_wasi.js":"78","/home/jake/Documents/Code/Algotia/web-ui-2/src/assets/editor_types/_worker_threads.js":"79","/home/jake/Documents/Code/Algotia/web-ui-2/src/assets/editor_types/_inspector.js":"80","/home/jake/Documents/Code/Algotia/web-ui-2/src/assets/editor_types/_zlib.js":"81"},{"size":237,"mtime":1610578075146,"results":"82","hashOfConfig":"83"},{"size":2590,"mtime":1610699010613,"results":"84","hashOfConfig":"83"},{"size":91,"mtime":1610577200752,"results":"85","hashOfConfig":"83"},{"size":4020,"mtime":1610577755470,"results":"86","hashOfConfig":"83"},{"size":765,"mtime":1610577200752,"results":"87","hashOfConfig":"83"},{"size":28,"mtime":1610577200752,"results":"88","hashOfConfig":"83"},{"size":205,"mtime":1610577200752,"results":"89","hashOfConfig":"83"},{"size":1434,"mtime":1610699364167,"results":"90","hashOfConfig":"83"},{"size":358,"mtime":1610577200752,"results":"91","hashOfConfig":"83"},{"size":2766,"mtime":1610577200752,"results":"92","hashOfConfig":"83"},{"size":3169,"mtime":1610577200752,"results":"93","hashOfConfig":"83"},{"size":83,"mtime":1610577200752,"results":"94","hashOfConfig":"83"},{"size":54,"mtime":1610577200752,"results":"95","hashOfConfig":"83"},{"size":407,"mtime":1610577200752,"results":"96","hashOfConfig":"83"},{"size":828,"mtime":1610710398769,"results":"97","hashOfConfig":"83"},{"size":2687,"mtime":1610844758108,"results":"98","hashOfConfig":"83"},{"size":62,"mtime":1610577200752,"results":"99","hashOfConfig":"83"},{"size":2034,"mtime":1610847550502,"results":"100","hashOfConfig":"83"},{"size":4869,"mtime":1610854961794,"results":"101","hashOfConfig":"83"},{"size":468,"mtime":1610842505967,"results":"102","hashOfConfig":"83"},{"size":2601,"mtime":1610577200752,"results":"103","hashOfConfig":"83"},{"size":2327,"mtime":1610710750570,"results":"104","hashOfConfig":"83"},{"size":1396,"mtime":1610710776906,"results":"105","hashOfConfig":"83"},{"size":960,"mtime":1610710750570,"results":"106","hashOfConfig":"83"},{"size":49,"mtime":1610843061026,"results":"107","hashOfConfig":"83"},{"size":52,"mtime":1610577200752,"results":"108","hashOfConfig":"83"},{"size":1342,"mtime":1610710825376,"results":"109","hashOfConfig":"83"},{"size":1012,"mtime":1610710676891,"results":"110","hashOfConfig":"83"},{"size":46,"mtime":1610577200752,"results":"111","hashOfConfig":"83"},{"size":58,"mtime":1610843086659,"results":"112","hashOfConfig":"83"},{"size":1063,"mtime":1610842710371,"results":"113","hashOfConfig":"83"},{"size":4783,"mtime":1610712904946,"results":"114","hashOfConfig":"83"},{"size":1872,"mtime":1610851125823,"results":"115","hashOfConfig":"83"},{"size":2267,"mtime":1610842882572,"results":"116","hashOfConfig":"83"},{"size":8166,"mtime":1610843030703,"results":"117","hashOfConfig":"83"},{"size":2372,"mtime":1610854272454,"results":"118","hashOfConfig":"83"},{"size":22225,"mtime":1610854272448,"results":"119","hashOfConfig":"83"},{"size":1034,"mtime":1610854272448,"results":"120","hashOfConfig":"83"},{"size":5271,"mtime":1610854272448,"results":"121","hashOfConfig":"83"},{"size":844,"mtime":1610854272448,"results":"122","hashOfConfig":"83"},{"size":11173,"mtime":1610854272448,"results":"123","hashOfConfig":"83"},{"size":160,"mtime":1610854272448,"results":"124","hashOfConfig":"83"},{"size":6132,"mtime":1610854272448,"results":"125","hashOfConfig":"83"},{"size":16669,"mtime":1610854272448,"results":"126","hashOfConfig":"83"},{"size":23524,"mtime":1610854272448,"results":"127","hashOfConfig":"83"},{"size":25302,"mtime":1610854272448,"results":"128","hashOfConfig":"83"},{"size":2556,"mtime":1610854272448,"results":"129","hashOfConfig":"83"},{"size":174,"mtime":1610854272451,"results":"130","hashOfConfig":"83"},{"size":690,"mtime":1610854272448,"results":"131","hashOfConfig":"83"},{"size":16552,"mtime":1610854272448,"results":"132","hashOfConfig":"83"},{"size":2488,"mtime":1610854272451,"results":"133","hashOfConfig":"83"},{"size":3194,"mtime":1610854272451,"results":"134","hashOfConfig":"83"},{"size":17772,"mtime":1610854272451,"results":"135","hashOfConfig":"83"},{"size":46658,"mtime":1610854272448,"results":"136","hashOfConfig":"83"},{"size":49810,"mtime":1610854272451,"results":"137","hashOfConfig":"83"},{"size":163,"mtime":1610854272451,"results":"138","hashOfConfig":"83"},{"size":13320,"mtime":1610854272451,"results":"139","hashOfConfig":"83"},{"size":8332,"mtime":1610854272451,"results":"140","hashOfConfig":"83"},{"size":6201,"mtime":1610854272451,"results":"141","hashOfConfig":"83"},{"size":640,"mtime":1610854272454,"results":"142","hashOfConfig":"83"},{"size":10274,"mtime":1610854272454,"results":"143","hashOfConfig":"83"},{"size":1199,"mtime":1610854272454,"results":"144","hashOfConfig":"83"},{"size":7307,"mtime":1610854272454,"results":"145","hashOfConfig":"83"},{"size":58066,"mtime":1610854272451,"results":"146","hashOfConfig":"83"},{"size":3335,"mtime":1610854272454,"results":"147","hashOfConfig":"83"},{"size":18554,"mtime":1610854272454,"results":"148","hashOfConfig":"83"},{"size":312,"mtime":1610854272454,"results":"149","hashOfConfig":"83"},{"size":18639,"mtime":1610854272454,"results":"150","hashOfConfig":"83"},{"size":946,"mtime":1610854272454,"results":"151","hashOfConfig":"83"},{"size":2290,"mtime":1610854272454,"results":"152","hashOfConfig":"83"},{"size":137986,"mtime":1610854272448,"results":"153","hashOfConfig":"83"},{"size":2620,"mtime":1610854272454,"results":"154","hashOfConfig":"83"},{"size":12616,"mtime":1610854272454,"results":"155","hashOfConfig":"83"},{"size":7225,"mtime":1610854272454,"results":"156","hashOfConfig":"83"},{"size":4472,"mtime":1610854272454,"results":"157","hashOfConfig":"83"},{"size":4763,"mtime":1610854272454,"results":"158","hashOfConfig":"83"},{"size":35451,"mtime":1610854272454,"results":"159","hashOfConfig":"83"},{"size":2362,"mtime":1610854272454,"results":"160","hashOfConfig":"83"},{"size":9995,"mtime":1610854272454,"results":"161","hashOfConfig":"83"},{"size":125410,"mtime":1610854272451,"results":"162","hashOfConfig":"83"},{"size":14524,"mtime":1610854272454,"results":"163","hashOfConfig":"83"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},"rlk4m6",{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"166"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"166"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"166"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"166"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"166"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"166"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"209","messages":"210","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"166"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"166"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"166"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"166"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245","usedDeprecatedRules":"166"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248","usedDeprecatedRules":"249"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"326","usedDeprecatedRules":"249"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},"/home/jake/Documents/Code/Algotia/web-ui-2/src/index.tsx",[],["341","342"],"/home/jake/Documents/Code/Algotia/web-ui-2/src/App.tsx",["343"],"import React, { useEffect, useState } from \"react\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport { theme, ResetCSS } from \"./assets/styles/\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Layout from \"./components/layout/Layout\";\nimport { BacktestPage } from \"./pages\";\nimport Init from \"./pages/init/init\";\n\nconst About = () => <div>about</div>;\nconst Users = () => <div>users</div>;\nconst Home = () => <div>home</div>;\n\ninterface InitRes {\n    init: boolean;\n    initalConfig?: string;\n}\n\nfunction App() {\n    const [loading, setLoading] = useState(true);\n    const [init, setInit] = useState<InitRes>();\n\n    useEffect(() => {\n        fetch(\"/api/init\")\n            .then((res) => {\n                return res.json();\n            })\n            .then((body) => {\n                setLoading(false);\n                setInit(body);\n            });\n    }, []);\n\n    const onInit = (configJson: any) => {\n        fetch(\"/api/init\", {\n            method: \"POST\",\n            body: configJson,\n            headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\",\n            },\n        })\n            .then((res) => {\n                return res.json();\n            })\n            .then((json) => {\n                if (json.errors) {\n                } else {\n                    setInit(json);\n                }\n            })\n            .catch((err) => {\n                alert(`Something went wrong: ${err.message}`);\n            });\n    };\n\n    return (\n        <>\n            {loading && <div />}\n            <ThemeProvider theme={theme}>\n                <ResetCSS />\n                {init && init.init && (\n                    <Router>\n                        <Layout>\n                            <Switch>\n                                <Route path=\"/backtest\">\n                                    <BacktestPage />\n                                </Route>\n                                <Route path=\"/users\">\n                                    <Users />\n                                </Route>\n                                <Route path=\"/\">\n                                    <Home />\n                                </Route>\n                            </Switch>\n                        </Layout>\n                    </Router>\n                )}\n                {init && !init.init && init.initalConfig && (\n                    <Init onInit={onInit} initalConfig={init.initalConfig} />\n                )}\n            </ThemeProvider>\n        </>\n    );\n}\n\nexport default App;\n","/home/jake/Documents/Code/Algotia/web-ui-2/src/assets/styles/index.ts",[],"/home/jake/Documents/Code/Algotia/web-ui-2/src/pages/init/init.tsx",["344","345","346"],"import styled from \"styled-components\";\nimport { Button } from \"@material-ui/core\";\nimport { makeStyles, Theme } from \"@material-ui/core/styles\";\nimport { Column } from \"../../components/shared\";\nimport MonacoEditor, { monaco, EditorDidMount } from \"@monaco-editor/react\";\nimport { FC, useEffect, useState } from \"react\";\n\nconst Wrapper = styled(Column)`\n    width: 100%;\n    height: 100%;\n    background-color: blue;\n    justify-content: center;\n    align-items: center;\n`;\n\nconst Body = styled(Column)`\n    width: 50%;\n    height: 80%;\n    align-items: center;\n`;\n\nconst Header = styled.div`\n    text-align: center;\n    margin-bottom: 50px;\n`;\n\nconst Heading = styled.h1`\n    font-size: 5em;\n`;\n\nconst SubHeading = styled.h3`\n    font-size: 3em;\n    margin-top: 25px;\n`;\n\nconst useStyles = makeStyles({\n    root: {\n        marginTop: \"25px\",\n        backgroundColor: \"green\",\n        borderRadius: 3,\n        border: 0,\n        color: \"#ffffff\",\n        height: \"50px\",\n        padding: \"0 30px\",\n        boxShadow: \"0 3px 5px 2px rgba(255, 105, 135, .3)\",\n        \"&:hover\": {\n            backgroundColor: \"green\",\n        },\n        \"&:disabled\": {\n            color: \"#000\",\n            backgroundColor: \"grey\",\n        },\n    },\n    disabled: {},\n});\n\nmonaco.init().then((monaco) => {\n    monaco.languages.json.jsonDefaults.setDiagnosticsOptions({\n        validate: true,\n        schemas: [\n            {\n                uri: \"http://json-schema.org/draft-07/schema\",\n                fileMatch: [\"*\"],\n                schema: {\n                    type: \"object\",\n                    properties: {\n                        port: {\n                            type: \"integer\",\n                            minimum: \"1\",\n                            maximum: \"65535\",\n                        },\n                        strategyDir: {\n                            title: \"Strategy directory\",\n                            type: \"string\",\n                            example: \"/foo/bar\",\n                            pattern: \"^/([A-z0-9-_+]+/)*([A-z0-9])+/?$\",\n                            description:\n                                \"An absoulte path to a directory that will be created, this path should not yet exist.\",\n                        },\n                    },\n                    required: [\"port\", \"strategyDir\"],\n                    additionalProperties: false,\n                },\n            },\n        ],\n    });\n});\n\nconst Init: FC<{ initalConfig: string; onInit: (config: any) => void }> = ({\n    initalConfig,\n    onInit,\n}) => {\n    // const editorDidMount: EditorDidMount = (editor) => {\n    //     editor.focus();\n    // };\n\n    const [config, setConfig] = useState<string>(initalConfig);\n    const [runDisabled, setRunDisabled] = useState(false);\n\n    useEffect(() => {\n        let json: any = {};\n        try {\n            json = JSON.parse(config);\n        } catch (err) {}\n        if (!json.port || !json.strategyDir) {\n            setRunDisabled(true);\n        } else {\n            setRunDisabled(false);\n        }\n    }, [config]);\n\n    const classes = useStyles();\n\n    return (\n        <Wrapper>\n            <Body>\n                <Header>\n                    <Heading>Welcome</Heading>\n                    <SubHeading>{\"Let's get started\"}</SubHeading>\n                </Header>\n                <MonacoEditor\n                    width=\"80%\"\n                    height=\"400px\"\n                    theme=\"vs-dark\"\n                    value={config}\n                    language={\"json\"}\n                    // editorDidMount={editorDidMount}\n                />\n                <Button\n                    classes={classes}\n                    disabled={runDisabled}\n                    onClick={() => {\n                        console.log(JSON.parse(config));\n                        !runDisabled && onInit(JSON.parse(config));\n                    }}\n                >\n                    submit\n                </Button>\n            </Body>\n        </Wrapper>\n    );\n};\n\nexport default Init;\n","/home/jake/Documents/Code/Algotia/web-ui-2/src/components/layout/Layout.tsx",[],"/home/jake/Documents/Code/Algotia/web-ui-2/src/pages/index.ts",[],"/home/jake/Documents/Code/Algotia/web-ui-2/src/assets/styles/theme.ts",[],"/home/jake/Documents/Code/Algotia/web-ui-2/src/assets/styles/reset.tsx",[],"/home/jake/Documents/Code/Algotia/web-ui-2/src/components/layout/Header.tsx",[],"/home/jake/Documents/Code/Algotia/web-ui-2/src/components/layout/SideBar.tsx",["347"],"import React, { PropsWithChildren } from \"react\";\nimport styled from \"styled-components\";\nimport { Column } from \"../shared\";\nimport { IconType } from \"react-icons\";\nimport { FaHome } from \"react-icons/fa\";\nimport { RiTestTubeFill } from \"react-icons/ri\";\nimport { NavLink } from \"react-router-dom\";\nimport { Paper } from \"@material-ui/core\";\nimport { createStyles, withStyles, WithStyles, Theme, useTheme } from \"@material-ui/core/styles\";\n\n// const Wrapper = withStyles({\n//     root: {\n//     },\n// })(Paper);\n\nconst styles = (theme: Theme) => {\n    return createStyles({\n        root: {\n            display: \"flex\",\n            flexDirection: \"column\",\n            height: \"100%\",\n            width: \"100px\",\n            borderRadius: \"0px\",\n            backgroundColor: theme.palette.primary.main,\n        },\n    });\n};\n\ninterface Props extends PropsWithChildren<WithStyles<typeof styles>> {}\n\nconst Wrapper = withStyles(styles)(({ classes, children }: Props) => (\n    <Paper classes={classes} elevation={3} square>\n        {children}\n    </Paper>\n));\n\nconst AlgotiaLogo = styled.div`\n    height: 50px;\n    width: 80%;\n    box-sizing: border-box;\n    margin: 0 auto;\n`;\n\nconst NavItem = styled(Column)`\n    height: 50px;\n    width: 100%;\n    justify-content: center;\n    align-items: center;\n`;\n\nconst Label = styled.p`\n    font-size: 1em;\n`;\nconst Seperator = styled.hr`\n    width: 80%;\n    margin: 5px auto 5px;\n`;\n\ninterface NavItemObj {\n    path: string;\n    label: string;\n    Icon: IconType;\n}\n\nconst navItems: NavItemObj[] = [\n    {\n        path: \"/\",\n        label: \"Home\",\n        Icon: FaHome,\n    },\n    {\n        path: \"/backtest\",\n        label: \"Backtest\",\n        Icon: RiTestTubeFill,\n    },\n];\n\nconst SideBar = () => {\n    const theme = useTheme();\n    return (\n        <Wrapper>\n            <AlgotiaLogo />\n            {navItems.map(({ path, label, Icon }, i) => {\n                return (\n                    <div key={\"to-\" + path}>\n                        <Seperator />\n                        <NavLink\n                            exact\n                            to={path}\n                            style={{\n                                color: \"#999\",\n                            }}\n                            activeStyle={{\n                                color: \"#fff\",\n                            }}\n                        >\n                            <NavItem>\n                                <Icon size={24} />\n                                <Label>{label}</Label>\n                            </NavItem>\n                        </NavLink>\n                        {i === navItems.length - 1 && <Seperator />}\n                    </div>\n                );\n            })}\n        </Wrapper>\n    );\n};\n\nexport default SideBar;\n","/home/jake/Documents/Code/Algotia/web-ui-2/src/components/layout/Footer.tsx",["348"],"import { PropsWithChildren } from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { FaThumbsDown, FaThumbsUp } from \"react-icons/fa\";\nimport styled from \"styled-components\";\nimport { Row } from \"../shared\";\nimport { Paper, Theme } from \"@material-ui/core\";\nimport {\n    WithStyles,\n    withStyles,\n    createStyles,\n} from \"@material-ui/core/styles\";\n\nconst styles = (theme: Theme) => {\n    return createStyles({\n        root: {\n            position: \"absolute\",\n            top: \"-111px\",\n            right: \"5px\",\n            height: \"100px\",\n            width: \"150px\",\n            color: \"#fff\",\n            padding: \"2px 5px\",\n            backgroundColor: theme.palette.primary.main,\n        },\n    });\n};\n\ninterface Props extends PropsWithChildren<WithStyles<typeof styles>> {}\n\nconst Menu = withStyles(styles)(({ classes, children }: Props) => (\n    <Paper classes={classes} elevation={3} square>\n        {children}\n    </Paper>\n));\n\nconst Wrapper = styled(Row)`\n    padding: 5px 10px;\n    height: 30px;\n    border-top: 2px solid #000;\n    justify-content: flex-end;\n    align-items: center;\n    position: relative;\n`;\n\nconst StatusWrapper = styled.div`\n    cursor: pointer;\n`;\n\n// const Menu = styled.div`\n// `;\n\nconst MenuHeader = styled.div`\n    width: 100%;\n    padding-bottom: 5px;\n    border-bottom: 1px solid #fff;\n    margin-bottom: 5px;\n`;\n\nconst StatusRow = styled(Row)`\n    margin-bottom: 10px;\n`;\nconst StatusLabel = styled.p`\n    text-transform: capitalize;\n    margin-right: 10px;\n`;\n\nconst Footer = () => {\n    const [menuOpen, setMenuOpen] = useState(false);\n    const [data, setData] = useState<Record<string, boolean>>();\n\n    const fetchStatus = async () => {\n        const res = await fetch(\"/api/status\");\n        if (res.status !== 200) {\n            throw \"PLACEHOLDER ERROR\";\n        }\n        const json = await res.json();\n        setData(json.exchanges);\n    };\n\n    useEffect(() => {\n        fetchStatus();\n    }, []);\n\n    const onClick = () => {\n        if (menuOpen === false) {\n            fetchStatus();\n        }\n        setMenuOpen(!menuOpen);\n    };\n\n    return (\n        <>\n            <Wrapper>\n                <StatusWrapper onClick={onClick}>\n                    <button>Status</button>\n                </StatusWrapper>\n                {menuOpen && (\n                    <Menu>\n                        <MenuHeader>Exchange status</MenuHeader>\n                        {data &&\n                            Object.keys(data).map((key) => {\n                                return (\n                                    <StatusRow>\n                                        <StatusLabel>{key}</StatusLabel>\n                                        {data[key] ? (\n                                            <FaThumbsUp color=\"green\" />\n                                        ) : (\n                                            <FaThumbsDown />\n                                        )}\n                                    </StatusRow>\n                                );\n                            })}\n                    </Menu>\n                )}\n            </Wrapper>\n        </>\n    );\n};\n\nexport default Footer;\n","/home/jake/Documents/Code/Algotia/web-ui-2/src/components/shared/index.ts",[],"/home/jake/Documents/Code/Algotia/web-ui-2/src/pages/backtest/index.ts",[],"/home/jake/Documents/Code/Algotia/web-ui-2/src/components/shared/form.tsx",[],"/home/jake/Documents/Code/Algotia/web-ui-2/src/components/shared/utils.tsx",[],"/home/jake/Documents/Code/Algotia/web-ui-2/src/pages/backtest/backtest.tsx",["349"],"import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Editor from \"./editor\";\nimport Form from \"./form\";\nimport Results from \"./results/\";\nimport Chart from \"./chart\";\nimport { Paper } from \"@material-ui/core\";\nimport { BacktestResults, OHLCV } from \"@algotia/core\";\n\nconst Wrapper = styled(Paper)`\n    width: 100%;\n    height: 100%;\n    display: flex;\n`;\n\nconst Left = styled.div`\n    height: 100%;\n    width: 65%;\n`;\n\nconst Right = styled.div`\n    height: 100%;\n    width: 35%;\n`;\n\nconst Top = styled.div`\n    width: 100%;\n    height: 40%;\n`;\nconst Bottom = styled.div`\n    width: 100%;\n    height: 60%;\n`;\n\nexport interface Options {\n    exchange: string;\n    period: string;\n    pair: string;\n    to: number;\n    from: number;\n    initialBalance: Record<string, number>;\n}\n\ntype Strategy = { strategyPath: string };\n\nconst BacktestPage: React.FC = () => {\n    const [candles, setCandles] = useState<OHLCV[]>();\n    const [results, setResults] = useState<BacktestResults>();\n    const [options, setOptions] = useState<Options>();\n    const [strategyPath, setStraegyPath] = useState<string>();\n\n    const run = (body: Options & Strategy) => {\n        fetch(\"/api/backtest\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json;charset=utf-8\",\n            },\n            body: JSON.stringify(body),\n        })\n            .then((res) => {\n                return res.json();\n            })\n            .then((res) => {\n                setCandles(res.candles);\n                setResults(res.results);\n                console.log(res);\n            })\n            .catch((err) => {\n                alert(err);\n            });\n    };\n\n    useEffect(() => {\n        if (options && strategyPath) {\n            const body = {\n                ...options,\n                strategyPath,\n            };\n            run(body);\n        }\n    }, [options]);\n\n    return (\n        <Wrapper>\n            <Left id=\"chart-parent\">\n                <Top>\n                    <Chart candles={candles} />\n                </Top>\n                <Bottom>\n                    <Editor setStraegyPath={setStraegyPath} />\n                </Bottom>\n            </Left>\n            <Right>\n                <Top>\n                    <Results\n                        results={results}\n                        candles={candles}\n                        options={options}\n                    />\n                </Top>\n                <Bottom>\n                    <Form setOptions={setOptions} strategy={strategyPath} />\n                </Bottom>\n            </Right>\n        </Wrapper>\n    );\n};\n\nexport default BacktestPage;\n","/home/jake/Documents/Code/Algotia/web-ui-2/src/components/shared/strategyEditor/index.ts",[],"/home/jake/Documents/Code/Algotia/web-ui-2/src/pages/backtest/chart.tsx",["350","351","352","353","354"],"import { BacktestResults, OHLCV } from \"@algotia/core\";\nimport { Component, FC } from \"react\";\nimport {\n    CandlestickSeries,\n    Chart,\n    ChartCanvas,\n    discontinuousTimeScaleProviderBuilder,\n    XAxis,\n    YAxis,\n    withSize,\n    withDeviceRatio,\n    WithSizeProps,\n} from \"react-financial-charts\";\nimport { group } from \"d3-array\";\nimport { ScaleContinuousNumeric, ScaleTime } from \"d3-scale\";\n\ninterface ChartProps extends WithSizeProps {\n    readonly candles?: OHLCV[];\n    readonly ratio: number;\n}\n\nclass ResultChart extends Component<ChartProps> {\n    private readonly margin = { left: 0, right: 40, top: 0, bottom: 24 };\n    private readonly xScaleProvider = discontinuousTimeScaleProviderBuilder().inputDateAccessor(\n        (d: OHLCV) => new Date(d.timestamp)\n    );\n\n    public render() {\n        const { candles: initialData, height, width } = this.props;\n\n        const {\n            data,\n            xScale,\n            xAccessor,\n            displayXAccessor,\n        } = this.xScaleProvider(initialData || []);\n\n        const max = xAccessor(data[data.length - 1]);\n        const min = xAccessor(data[Math.max(0, data.length - 100)]);\n        const xExtents = [min, max];\n\n        return (\n            <ChartCanvas\n                height={height}\n                width={width}\n                ratio={1}\n                margin={this.margin}\n                data={data}\n                displayXAccessor={displayXAccessor}\n                seriesName=\"Data\"\n                xScale={xScale}\n                xAccessor={xAccessor}\n                xExtents={xExtents}\n            >\n                <Chart id={1} yExtents={this.yExtents}>\n                    <CandlestickSeries />\n                    <XAxis />\n                    <YAxis />\n                </Chart>\n            </ChartCanvas>\n        );\n    }\n\n    private readonly yExtents = (data: OHLCV) => {\n        return [data.high, data.low];\n    };\n}\n\nexport default withSize({ style: { width: \"100%\", height: \"100%\" } })(\n    withDeviceRatio()(ResultChart)\n);\n","/home/jake/Documents/Code/Algotia/web-ui-2/src/components/shared/strategyEditor/strategyEditor.tsx",["355"],"/home/jake/Documents/Code/Algotia/web-ui-2/src/pages/backtest/editor.tsx",["356","357"],"import React, { FC, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { StrategyEditor } from \"../../components/shared\";\n\nconst Editor: FC<{ setStraegyPath: (path: string) => void }> = (props) => {\n    const { setStraegyPath } = props;\n\n    return (\n        <StrategyEditor\n\t\t\theight=\"60%\"\n            onStrategySelected={(strategy) => {\n                setStraegyPath(strategy.path);\n            }}\n        />\n    );\n};\n\nexport default Editor;\n","/home/jake/Documents/Code/Algotia/web-ui-2/src/components/shared/strategyEditor/topBar.tsx",["358"],"import { MenuItem, Select, Button, FormControl } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { StrictMode } from \"react\"\nimport { FC, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { Row } from \"../utils\";\nimport { StrategyMeta } from \"./strategyEditor\";\n\nconst BarWrapper = styled(Row)`\n    height: 45px;\n    width: 100%;\n    background-color: #444;\n    align-items: center;\n    justify-content: center;\n    position: relative;\n    padding: 5px;\n    box-sizing: border-box;\n`;\n\nconst NewButton = styled(Button)``;\n\n//TODO: import StrategyData from server types\n\nconst useButtonStyles = makeStyles({\n    root: {\n        height: \"35px\",\n        width: \"45px\",\n        backgroundColor: \"#72a56f\",\n        position: \"absolute\",\n        right: \"15px\",\n    },\n});\n\nconst useSelectStyles = makeStyles({\n    root: {\n        maxHeight: \"35px\",\n        height: \"35px\",\n        minWidth: \"100px\",\n    },\n});\n\nconst TopBar: FC<{\n    allStrategies: StrategyMeta[] | undefined;\n    selectStrategy: (data: StrategyMeta) => void;\n}> = (props) => {\n    const { allStrategies, selectStrategy } = props;\nconst [selectVal, setSelectVal] = useState(\"\");\n\n    const buttonClasses = useButtonStyles();\n    const selectClasses = useSelectStyles();\n\n    return (\n        <BarWrapper>\n            <FormControl margin=\"dense\">\n                <Select\n                    id=\"strategy-selector\"\n                    displayEmpty\n                    classes={selectClasses}\n                    style={{ height: \"35px\" }}\n                    value={selectVal}\n                    variant=\"filled\"\n                >\n                    <MenuItem value=\"\">Strategy</MenuItem>\n                    {allStrategies &&\n                        allStrategies.map((data) => {\n                            return (\n                                <MenuItem\n                                    key={\"select-file-\" + data.basename}\n                                    value={data.basename}\n                                    onClick={() => {\n                                        setSelectVal(data.basename);\n                                        selectStrategy(data);\n                                    }}\n                                >\n                                    {data.basename}\n                                </MenuItem>\n                            );\n                        })}\n                </Select>\n            </FormControl>\n            <NewButton classes={buttonClasses}>Hello</NewButton>\n        </BarWrapper>\n    );\n};\n\nexport default TopBar;\n","/home/jake/Documents/Code/Algotia/web-ui-2/src/pages/backtest/form/selectInitialBalance.tsx",["359","360","361"],"import { TextField } from \"@material-ui/core\";\nimport { Autocomplete } from \"@material-ui/lab\";\nimport { Dispatch, FC, SetStateAction, useEffect, useState } from \"react\";\nimport { Skeleton } from \"../../../components/\";\n\ninterface SelectInitialBalanceProps {\n    id: string;\n    currencyList: string[] | undefined;\n    initialCurrency: string;\n    onChange: (value: { currency: string; amount: number }) => void;\n    strategy: string | undefined;\n}\n\nconst SelectInitialBalance: FC<SelectInitialBalanceProps> = (props) => {\n    const { id, initialCurrency, currencyList, onChange, strategy } = props;\n    const [currency, setCurrency] = useState<string>(\"\");\n    const [amount, setAmount] = useState<number>(0);\n    const [error, setError] = useState(false);\n\n    useEffect(() => {\n        onChange({ amount, currency: currency || initialCurrency });\n    }, [amount, currency]);\n\n    return (\n        <>\n            <Skeleton show={strategy} width=\"45%\">\n                <Autocomplete\n                    id={id + \"-autocomplete\"}\n                    disabled={!initialCurrency}\n                    options={currencyList || []}\n                    getOptionLabel={(c) => c}\n                    style={{ width: \"45%\" }}\n                    value={initialCurrency || currency}\n                    inputValue={initialCurrency || currency}\n                    onChange={(_, val) => {\n                        console.log(\"V\", val);\n                        if (val) {\n                            setCurrency(val);\n                        }\n                    }}\n                    renderInput={(params) => (\n                        <TextField\n                            {...params}\n                            label=\"Select a currency\"\n                            variant=\"standard\"\n                        />\n                    )}\n                />\n            </Skeleton>\n            <Skeleton show={strategy} width=\"45%\">\n                <TextField\n                    id={id + \"-text-field\"}\n                    disabled={!initialCurrency}\n                    style={{ width: \"45%\" }}\n                    label={\"Amount\"}\n                    value={amount}\n                    error={typeof amount === \"string\"}\n                    onChange={(e) => {\n                        let val: string | number = e.target.value;\n                        if (!isNaN(Number(val))) {\n                            error && setError(false);\n                            val = Number(val);\n                            setAmount(val);\n                        } else {\n                            setError(true);\n                        }\n                    }}\n                ></TextField>\n            </Skeleton>\n        </>\n    );\n};\n\nexport default SelectInitialBalance;\n","/home/jake/Documents/Code/Algotia/web-ui-2/src/pages/backtest/form/selectPeriod.tsx",[],"/home/jake/Documents/Code/Algotia/web-ui-2/src/pages/backtest/form/selectPair.tsx",[],"/home/jake/Documents/Code/Algotia/web-ui-2/src/pages/backtest/form/index.tsx",[],"/home/jake/Documents/Code/Algotia/web-ui-2/src/components/index.ts",[],"/home/jake/Documents/Code/Algotia/web-ui-2/src/pages/backtest/form/selectExchange.tsx",[],"/home/jake/Documents/Code/Algotia/web-ui-2/src/pages/backtest/form/selectDates.tsx",[],"/home/jake/Documents/Code/Algotia/web-ui-2/src/components/layout/index.ts",[],"/home/jake/Documents/Code/Algotia/web-ui-2/src/pages/backtest/results/index.ts",[],"/home/jake/Documents/Code/Algotia/web-ui-2/src/pages/backtest/results/results.tsx",[],"/home/jake/Documents/Code/Algotia/web-ui-2/src/pages/backtest/results/balance.tsx",[],"/home/jake/Documents/Code/Algotia/web-ui-2/src/components/shared/strategyEditor/defaultValue.ts",[],"/home/jake/Documents/Code/Algotia/web-ui-2/src/pages/backtest/results/table.tsx",["362"],"import { BacktestResults, OHLCV } from \"@algotia/core\";\nimport { Paper } from \"@material-ui/core\";\nimport { ToggleButton, ToggleButtonGroup } from \"@material-ui/lab\";\nimport { FC, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { Column } from \"../../../components\";\nimport { Options } from \"../backtest\";\nimport Balance from \"./balance\";\n\nconst ResultsTableWrapper = styled(Column)`\n    height: 100%;\n    width: 100%;\n`;\n\nconst Header = styled.div`\n    height: 50px;\n    width: 100%;\n    display: flex;\n    padding: 5px 0;\n    box-sizing: border-box;\n    justify-content: center;\n    align-items: space-around;\n`;\n\nconst Body = styled.div`\n\tflex-grow: 1;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    overflow-y: scroll;\n    border: 2px solid #808080;\n    box-sizing: border-box;\n`;\n\nconst ResultsTable: FC<{\n    results: BacktestResults;\n    options: Options;\n    candles: OHLCV[];\n}> = (props) => {\n    const { results, options, candles } = props;\n\n    const allGroups = [\n        \"Balance\",\n        \"Closed Orders\",\n        \"Open Orders\",\n        \"Errors\",\n    ] as const;\n\n    const [group, setGroup] = useState<typeof allGroups[number]>(allGroups[0]);\n\n    const handleGroupChange = (_: any, groupName: any) => {\n        setGroup(groupName);\n    };\n\n    return (\n        <ResultsTableWrapper>\n            <Header>\n                <ToggleButtonGroup\n                    exclusive\n                    size=\"small\"\n                    onChange={handleGroupChange}\n                    value={group}\n                >\n                    {allGroups.map((groupName) => {\n                        return (\n                            <ToggleButton value={groupName}>\n                                {groupName}\n                            </ToggleButton>\n                        );\n                    })}\n                </ToggleButtonGroup>\n            </Header>\n            <Body>\n                {group === \"Balance\" && (\n                    <Balance\n                        options={options}\n                        results={results}\n                        candles={candles}\n                    />\n                )}\n            </Body>\n        </ResultsTableWrapper>\n    );\n};\n\nexport default ResultsTable;\n","/home/jake/Documents/Code/Algotia/web-ui-2/src/pages/backtest/form/form.tsx",["363"],"import { useEffect, useState, FC, Dispatch, SetStateAction } from \"react\";\nimport styled from \"styled-components\";\nimport { ExchangeID, parsePair, parsePeriod } from \"@algotia/core\";\nimport { Button } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Alert } from \"@material-ui/lab\";\nimport { Column, Row } from \"../../../components/shared\";\nimport moment from \"moment\";\nimport { Options } from \"../backtest\";\nimport SelectExchange from \"./selectExchange\";\nimport SelectDate from \"./selectDates\";\nimport SelectInitialBalance from \"./selectInitialBalance\";\nimport SelectPair from \"./selectPair\";\nimport SelectPeriod from \"./selectPeriod\";\n\nconst FormWrapper = styled.div`\n    box-sizing: border-box;\n    width: 100%;\n    height: 100%;\n    background-color: #ffffff;\n    padding: 15px;\n    position: relative;\n    box-sizing: border-box;\n`;\n\nconst FormBody = styled(Column)`\n    width: 100%;\n    height: 100%;\n    padding: 15px;\n    box-sizing: border-box;\n    align-items: center;\n    justify-content: space-evenly;\n`;\n\nconst FormItem = styled(Row)`\n    align-items: center;\n`;\n\nconst RowItem = styled(FormItem)`\n    width: 100%;\n    justify-content: space-between;\n`;\n\nconst useStyles = makeStyles({\n    root: {\n        height: \"50px\",\n        width: \"100px\",\n        fontSize: \"20px\",\n        boxSizing: \"border-box\",\n    },\n    primary: {\n        backgroundColor: \"#20ad16\",\n    },\n    disabled: {\n        backgroundColor: \"grey\",\n    },\n});\n\nconst Form: FC<{\n    setOptions: Dispatch<SetStateAction<Options | undefined>>;\n    strategy: string | undefined;\n}> = (props) => {\n    const [pairList, setPairList] = useState<string[]>();\n    const [periodList, setTimeframeList] = useState<string[]>();\n    const [currencyList, setCurrencyList] = useState<string[]>();\n    const [periodInfo, setPeriodInfo] = useState<\n        ReturnType<typeof parsePeriod>\n    >();\n\n    let now = new Date();\n\n    now = moment(now).subtract(now.getTimezoneOffset(), \"minutes\").toDate();\n    now.setHours(0, 0, 0);\n    now.setMilliseconds(0);\n\n    const initialTo = new Date(now);\n    now.setMonth(now.getMonth() - 1);\n\n    const initialFrom = new Date(now);\n\n    const [exchangeId, setExchangeId] = useState<ExchangeID>(\"\" as ExchangeID);\n    const [pair, setPair] = useState(\"\");\n    const [period, setPeriod] = useState<string>(\"\");\n    const [to, setTo] = useState<Date>(initialTo);\n    const [from, setFrom] = useState<Date>(initialFrom);\n    const [initialBalance, setIntialBalance] = useState<Record<string, number>>(\n        {}\n    );\n\n    const [isTimeError, setTimeError] = useState(false);\n\n    const [canRun, setCanRun] = useState(false);\n\n    useEffect(() => {\n        if (exchangeId) {\n            console.log(initialBalance);\n            fetch(\n                `/api/exchange?id=${exchangeId}&symbols=true&timeframes=true&currencies=true`\n            )\n                .then((res) => {\n                    return res.json();\n                })\n                .then((res) => {\n                    setPairList(res.symbols);\n                    setTimeframeList(Object.keys(res.timeframes));\n                    setCurrencyList(Object.keys(res.currencies));\n                })\n                .catch((err) => {\n                    alert(err);\n                });\n        }\n    }, [exchangeId]);\n\n    useEffect(() => {\n        setTimeError(\n            Boolean(\n                period &&\n                    to &&\n                    from &&\n                    to.getTime() - from.getTime() < parsePeriod(period).periodMs\n            )\n        );\n        if (period) {\n            setPeriodInfo(parsePeriod(period));\n        }\n    }, [to, from, period]);\n\n    useEffect(() => {\n        if (pair) {\n            const [base, quote] = parsePair(pair);\n            setIntialBalance({\n                [base]: 0,\n                [quote]: 0,\n            });\n        }\n    }, [pair]);\n\n    useEffect(() => {\n        if (to && from && pair && period && initialBalance) {\n            setCanRun(true);\n        }\n    }, [to, from, pair, period, initialBalance]);\n\n    const classes = useStyles();\n\n    const buttonClasses = `${classes.root} ${\n        (canRun && classes.primary) || classes.disabled\n    }`;\n\n    const run = () => {\n        if (exchangeId && to && from && period && pair) {\n            const body = {\n                exchange: exchangeId,\n                to: new Date(to.toUTCString()).getTime(),\n                from: new Date(from.toUTCString()).getTime(),\n                pair: pair,\n                period,\n                initialBalance,\n            };\n            props.setOptions(body);\n        }\n    };\n\n    return (\n        <FormWrapper>\n            <FormBody>\n                <FormItem>\n                    <SelectExchange\n                        strategy={props.strategy}\n                        exchangeId={exchangeId}\n                        setExchangeId={setExchangeId}\n                    />\n                </FormItem>\n                {isTimeError && periodInfo && (\n                    <Alert\n                        severity=\"warning\"\n                        style={{ width: \"95%\", margin: \"10px 0\" }}\n                    >\n                        Parameter \"From\" must be at least {periodInfo.amount}{\" \"}\n                        {periodInfo.unitLabel} behind \"To\"\n                    </Alert>\n                )}\n                <RowItem>\n                    <SelectDate\n                        exchangeId={exchangeId}\n                        isTimeError={isTimeError}\n                        setDate={setFrom}\n                        date={from}\n                        label=\"From\"\n                        minDate={new Date(\"01/01/2015\")}\n                    />\n\n                    <SelectDate\n                        exchangeId={exchangeId}\n                        isTimeError={isTimeError}\n                        setDate={setTo}\n                        date={to}\n                        label=\"To\"\n                        minDate={new Date(from ? from : \"01/01/2015\")}\n                    />\n                </RowItem>\n                <RowItem>\n                    <SelectPair pairList={pairList} setPair={setPair} />\n                    <SelectPeriod\n                        period={period}\n                        setPeriod={setPeriod}\n                        periodList={periodList}\n                    />\n                </RowItem>\n                <RowItem style={{ width: \"60%\" }}>\n                    <SelectInitialBalance\n                        id=\"base\"\n                        initialCurrency={pair.split(\"/\")[0]}\n                        currencyList={currencyList}\n                        onChange={({ amount, currency }) => {\n                            console.log(\"am\", amount);\n                            console.log(\"cu\", currency);\n                            setIntialBalance(\n                                Object.assign(initialBalance, {\n                                    [currency]: amount,\n                                })\n                            );\n                            console.log(initialBalance);\n                        }}\n                    />\n                </RowItem>\n                <RowItem style={{ width: \"60%\" }}>\n                    <SelectInitialBalance\n                        id=\"quote\"\n                        initialCurrency={pair.split(\"/\")[1]}\n                        currencyList={currencyList}\n                        onChange={({ amount, currency }) => {\n                            setIntialBalance(\n                                Object.assign(initialBalance, {\n                                    [currency]: amount,\n                                })\n                            );\n                        }}\n                    />\n                </RowItem>\n                <FormItem>\n                    <Button\n                        disabled={!canRun}\n                        className={buttonClasses}\n                        onClick={run}\n                    >\n                        Run\n                    </Button>\n                </FormItem>\n            </FormBody>\n        </FormWrapper>\n    );\n};\n\nexport default Form;\n","/home/jake/Documents/Code/Algotia/web-ui-2/src/assets/editor_types/index.js",["364"],"\nimport ccxt from \"./ccxt\" \nimport _assert from \"./_assert\" \nimport _async_hooks from \"./_async_hooks\" \nimport _base from \"./_base\" \nimport _buffer from \"./_buffer\" \nimport _child_process from \"./_child_process\" \nimport _cluster from \"./_cluster\" \nimport _console from \"./_console\" \nimport _constants from \"./_constants\" \nimport _crypto from \"./_crypto\" \nimport _dgram from \"./_dgram\" \nimport _dns from \"./_dns\" \nimport _domain from \"./_domain\" \nimport _events from \"./_events\" \nimport _fs from \"./_fs\" \nimport _globals from \"./_globals\" \nimport _globals_global from \"./_globals_global\" \nimport _http from \"./_http\" \nimport _http2 from \"./_http2\" \nimport _https from \"./_https\" \nimport _index from \"./_index\" \nimport _inspector from \"./_inspector\" \nimport _module from \"./_module\" \nimport _net from \"./_net\" \nimport _os from \"./_os\" \nimport _path from \"./_path\" \nimport _perf_hooks from \"./_perf_hooks\" \nimport _process from \"./_process\" \nimport _punycode from \"./_punycode\" \nimport _querystring from \"./_querystring\" \nimport _readline from \"./_readline\" \nimport _repl from \"./_repl\" \nimport _stream from \"./_stream\" \nimport _string_decoder from \"./_string_decoder\" \nimport _timers from \"./_timers\" \nimport _tls from \"./_tls\" \nimport _trace_events from \"./_trace_events\" \nimport _tty from \"./_tty\" \nimport _url from \"./_url\" \nimport _util from \"./_util\" \nimport _v8 from \"./_v8\" \nimport _vm from \"./_vm\" \nimport _wasi from \"./_wasi\" \nimport _worker_threads from \"./_worker_threads\" \nimport _zlib from \"./_zlib\" \n\n\nexport default {\n\t'ccxt': ccxt,'assert': _assert,'async_hooks': _async_hooks,'base': _base,'buffer': _buffer,'child_process': _child_process,'cluster': _cluster,'console': _console,'constants': _constants,'crypto': _crypto,'dgram': _dgram,'dns': _dns,'domain': _domain,'events': _events,'fs': _fs,'globals': _globals,'globals.global': _globals_global,'http': _http,'http2': _http2,'https': _https,'index': _index,'inspector': _inspector,'module': _module,'net': _net,'os': _os,'path': _path,'perf_hooks': _perf_hooks,'process': _process,'punycode': _punycode,'querystring': _querystring,'readline': _readline,'repl': _repl,'stream': _stream,'string_decoder': _string_decoder,'timers': _timers,'tls': _tls,'trace_events': _trace_events,'tty': _tty,'url': _url,'util': _util,'v8': _v8,'vm': _vm,'wasi': _wasi,'worker_threads': _worker_threads,'zlib': _zlib,\n}\n",["365","366"],"/home/jake/Documents/Code/Algotia/web-ui-2/src/assets/editor_types/ccxt.js",[],"/home/jake/Documents/Code/Algotia/web-ui-2/src/assets/editor_types/_base.js",[],"/home/jake/Documents/Code/Algotia/web-ui-2/src/assets/editor_types/_assert.js",[],"/home/jake/Documents/Code/Algotia/web-ui-2/src/assets/editor_types/_buffer.js",[],"/home/jake/Documents/Code/Algotia/web-ui-2/src/assets/editor_types/_async_hooks.js",[],"/home/jake/Documents/Code/Algotia/web-ui-2/src/assets/editor_types/_console.js",[],"/home/jake/Documents/Code/Algotia/web-ui-2/src/assets/editor_types/_dgram.js",[],"/home/jake/Documents/Code/Algotia/web-ui-2/src/assets/editor_types/_cluster.js",[],"/home/jake/Documents/Code/Algotia/web-ui-2/src/assets/editor_types/_constants.js",[],"/home/jake/Documents/Code/Algotia/web-ui-2/src/assets/editor_types/_child_process.js",[],"/home/jake/Documents/Code/Algotia/web-ui-2/src/assets/editor_types/_events.js",[],"/home/jake/Documents/Code/Algotia/web-ui-2/src/assets/editor_types/_globals_global.js",[],"/home/jake/Documents/Code/Algotia/web-ui-2/src/assets/editor_types/_domain.js",[],"/home/jake/Documents/Code/Algotia/web-ui-2/src/assets/editor_types/_dns.js",[],"/home/jake/Documents/Code/Algotia/web-ui-2/src/assets/editor_types/_https.js",[],"/home/jake/Documents/Code/Algotia/web-ui-2/src/assets/editor_types/_index.js",[],"/home/jake/Documents/Code/Algotia/web-ui-2/src/assets/editor_types/_http.js",[],"/home/jake/Documents/Code/Algotia/web-ui-2/src/assets/editor_types/_crypto.js",[],"/home/jake/Documents/Code/Algotia/web-ui-2/src/assets/editor_types/_globals.js",[],"/home/jake/Documents/Code/Algotia/web-ui-2/src/assets/editor_types/_module.js",[],"/home/jake/Documents/Code/Algotia/web-ui-2/src/assets/editor_types/_net.js",[],"/home/jake/Documents/Code/Algotia/web-ui-2/src/assets/editor_types/_os.js",[],"/home/jake/Documents/Code/Algotia/web-ui-2/src/assets/editor_types/_path.js",[],"/home/jake/Documents/Code/Algotia/web-ui-2/src/assets/editor_types/_process.js",[],"/home/jake/Documents/Code/Algotia/web-ui-2/src/assets/editor_types/_perf_hooks.js",[],"/home/jake/Documents/Code/Algotia/web-ui-2/src/assets/editor_types/_querystring.js",[],"/home/jake/Documents/Code/Algotia/web-ui-2/src/assets/editor_types/_readline.js",[],"/home/jake/Documents/Code/Algotia/web-ui-2/src/assets/editor_types/_http2.js",[],"/home/jake/Documents/Code/Algotia/web-ui-2/src/assets/editor_types/_punycode.js",[],"/home/jake/Documents/Code/Algotia/web-ui-2/src/assets/editor_types/_repl.js",[],"/home/jake/Documents/Code/Algotia/web-ui-2/src/assets/editor_types/_string_decoder.js",[],"/home/jake/Documents/Code/Algotia/web-ui-2/src/assets/editor_types/_stream.js",[],"/home/jake/Documents/Code/Algotia/web-ui-2/src/assets/editor_types/_timers.js",[],"/home/jake/Documents/Code/Algotia/web-ui-2/src/assets/editor_types/_trace_events.js",[],"/home/jake/Documents/Code/Algotia/web-ui-2/src/assets/editor_types/_fs.js",[],"/home/jake/Documents/Code/Algotia/web-ui-2/src/assets/editor_types/_tty.js",[],"/home/jake/Documents/Code/Algotia/web-ui-2/src/assets/editor_types/_util.js",[],"/home/jake/Documents/Code/Algotia/web-ui-2/src/assets/editor_types/_v8.js",["367"],"\n// This file is automatically generated. Do not edit it.\n\nconst _v8 = \"declare module \\\"v8\\\" {\\n    import { Readable } from \\\"stream\\\";\\n\\n    interface HeapSpaceInfo {\\n        space_name: string;\\n        space_size: number;\\n        space_used_size: number;\\n        space_available_size: number;\\n        physical_space_size: number;\\n    }\\n\\n    // ** Signifies if the --zap_code_space option is enabled or not.  1 == enabled, 0 == disabled. */\\n    type DoesZapCodeSpaceFlag = 0 | 1;\\n\\n    interface HeapInfo {\\n        total_heap_size: number;\\n        total_heap_size_executable: number;\\n        total_physical_size: number;\\n        total_available_size: number;\\n        used_heap_size: number;\\n        heap_size_limit: number;\\n        malloced_memory: number;\\n        peak_malloced_memory: number;\\n        does_zap_garbage: DoesZapCodeSpaceFlag;\\n        number_of_native_contexts: number;\\n        number_of_detached_contexts: number;\\n    }\\n\\n    interface HeapCodeStatistics {\\n        code_and_metadata_size: number;\\n        bytecode_and_metadata_size: number;\\n        external_script_source_size: number;\\n    }\\n\\n    /**\\n     * Returns an integer representing a \\\"version tag\\\" derived from the V8 version, command line flags and detected CPU features.\\n     * This is useful for determining whether a vm.Script cachedData buffer is compatible with this instance of V8.\\n     */\\n    function cachedDataVersionTag(): number;\\n\\n    function getHeapStatistics(): HeapInfo;\\n    function getHeapSpaceStatistics(): HeapSpaceInfo[];\\n    function setFlagsFromString(flags: string): void;\\n    /**\\n     * Generates a snapshot of the current V8 heap and returns a Readable\\n     * Stream that may be used to read the JSON serialized representation.\\n     * This conversation was marked as resolved by joyeecheung\\n     * This JSON stream format is intended to be used with tools such as\\n     * Chrome DevTools. The JSON schema is undocumented and specific to the\\n     * V8 engine, and may change from one version of V8 to the next.\\n     */\\n    function getHeapSnapshot(): Readable;\\n\\n    /**\\n     *\\n     * @param fileName The file path where the V8 heap snapshot is to be\\n     * saved. If not specified, a file name with the pattern\\n     * `'Heap-${yyyymmdd}-${hhmmss}-${pid}-${thread_id}.heapsnapshot'` will be\\n     * generated, where `{pid}` will be the PID of the Node.js process,\\n     * `{thread_id}` will be `0` when `writeHeapSnapshot()` is called from\\n     * the main Node.js thread or the id of a worker thread.\\n     */\\n    function writeHeapSnapshot(fileName?: string): string;\\n\\n    function getHeapCodeStatistics(): HeapCodeStatistics;\\n\\n    /**\\n     * @experimental\\n     */\\n    class Serializer {\\n        /**\\n         * Writes out a header, which includes the serialization format version.\\n         */\\n        writeHeader(): void;\\n\\n        /**\\n         * Serializes a JavaScript value and adds the serialized representation to the internal buffer.\\n         * This throws an error if value cannot be serialized.\\n         */\\n        writeValue(val: any): boolean;\\n\\n        /**\\n         * Returns the stored internal buffer.\\n         * This serializer should not be used once the buffer is released.\\n         * Calling this method results in undefined behavior if a previous write has failed.\\n         */\\n        releaseBuffer(): Buffer;\\n\\n        /**\\n         * Marks an ArrayBuffer as having its contents transferred out of band.\\\\\\n         * Pass the corresponding ArrayBuffer in the deserializing context to deserializer.transferArrayBuffer().\\n         */\\n        transferArrayBuffer(id: number, arrayBuffer: ArrayBuffer): void;\\n\\n        /**\\n         * Write a raw 32-bit unsigned integer.\\n         */\\n        writeUint32(value: number): void;\\n\\n        /**\\n         * Write a raw 64-bit unsigned integer, split into high and low 32-bit parts.\\n         */\\n        writeUint64(hi: number, lo: number): void;\\n\\n        /**\\n         * Write a JS number value.\\n         */\\n        writeDouble(value: number): void;\\n\\n        /**\\n         * Write raw bytes into the serializer’s internal buffer.\\n         * The deserializer will require a way to compute the length of the buffer.\\n         */\\n        writeRawBytes(buffer: NodeJS.TypedArray): void;\\n    }\\n\\n    /**\\n     * A subclass of `Serializer` that serializes `TypedArray` (in particular `Buffer`) and `DataView` objects as host objects,\\n     * and only stores the part of their underlying `ArrayBuffers` that they are referring to.\\n     * @experimental\\n     */\\n    class DefaultSerializer extends Serializer {\\n    }\\n\\n    /**\\n     * @experimental\\n     */\\n    class Deserializer {\\n        constructor(data: NodeJS.TypedArray);\\n        /**\\n         * Reads and validates a header (including the format version).\\n         * May, for example, reject an invalid or unsupported wire format.\\n         * In that case, an Error is thrown.\\n         */\\n        readHeader(): boolean;\\n\\n        /**\\n         * Deserializes a JavaScript value from the buffer and returns it.\\n         */\\n        readValue(): any;\\n\\n        /**\\n         * Marks an ArrayBuffer as having its contents transferred out of band.\\n         * Pass the corresponding `ArrayBuffer` in the serializing context to serializer.transferArrayBuffer()\\n         * (or return the id from serializer._getSharedArrayBufferId() in the case of SharedArrayBuffers).\\n         */\\n        transferArrayBuffer(id: number, arrayBuffer: ArrayBuffer): void;\\n\\n        /**\\n         * Reads the underlying wire format version.\\n         * Likely mostly to be useful to legacy code reading old wire format versions.\\n         * May not be called before .readHeader().\\n         */\\n        getWireFormatVersion(): number;\\n\\n        /**\\n         * Read a raw 32-bit unsigned integer and return it.\\n         */\\n        readUint32(): number;\\n\\n        /**\\n         * Read a raw 64-bit unsigned integer and return it as an array [hi, lo] with two 32-bit unsigned integer entries.\\n         */\\n        readUint64(): [number, number];\\n\\n        /**\\n         * Read a JS number value.\\n         */\\n        readDouble(): number;\\n\\n        /**\\n         * Read raw bytes from the deserializer’s internal buffer.\\n         * The length parameter must correspond to the length of the buffer that was passed to serializer.writeRawBytes().\\n         */\\n        readRawBytes(length: number): Buffer;\\n    }\\n\\n    /**\\n     * A subclass of `Serializer` that serializes `TypedArray` (in particular `Buffer`) and `DataView` objects as host objects,\\n     * and only stores the part of their underlying `ArrayBuffers` that they are referring to.\\n     * @experimental\\n     */\\n    class DefaultDeserializer extends Deserializer {\\n    }\\n\\n    /**\\n     * Uses a `DefaultSerializer` to serialize value into a buffer.\\n     * @experimental\\n     */\\n    function serialize(value: any): Buffer;\\n\\n    /**\\n     * Uses a `DefaultDeserializer` with default options to read a JS value from a buffer.\\n     * @experimental\\n     */\\n    function deserialize(data: NodeJS.TypedArray): any;\\n}\\n\"\n\nexport default _v8\n","/home/jake/Documents/Code/Algotia/web-ui-2/src/assets/editor_types/_url.js",[],"/home/jake/Documents/Code/Algotia/web-ui-2/src/assets/editor_types/_vm.js",[],"/home/jake/Documents/Code/Algotia/web-ui-2/src/assets/editor_types/_tls.js",[],"/home/jake/Documents/Code/Algotia/web-ui-2/src/assets/editor_types/_wasi.js",[],"/home/jake/Documents/Code/Algotia/web-ui-2/src/assets/editor_types/_worker_threads.js",[],"/home/jake/Documents/Code/Algotia/web-ui-2/src/assets/editor_types/_inspector.js",[],"/home/jake/Documents/Code/Algotia/web-ui-2/src/assets/editor_types/_zlib.js",[],{"ruleId":"368","replacedBy":"369"},{"ruleId":"370","replacedBy":"371"},{"ruleId":"372","severity":1,"message":"373","line":9,"column":7,"nodeType":"374","messageId":"375","endLine":9,"endColumn":12},{"ruleId":"372","severity":1,"message":"376","line":3,"column":22,"nodeType":"374","messageId":"375","endLine":3,"endColumn":27},{"ruleId":"372","severity":1,"message":"377","line":5,"column":32,"nodeType":"374","messageId":"375","endLine":5,"endColumn":46},{"ruleId":"372","severity":1,"message":"378","line":97,"column":20,"nodeType":"374","messageId":"375","endLine":97,"endColumn":29},{"ruleId":"372","severity":1,"message":"379","line":79,"column":11,"nodeType":"374","messageId":"375","endLine":79,"endColumn":16},{"ruleId":"380","severity":1,"message":"381","line":74,"column":13,"nodeType":"382","messageId":"383","endLine":74,"endColumn":39},{"ruleId":"384","severity":1,"message":"385","line":81,"column":8,"nodeType":"386","endLine":81,"endColumn":17,"suggestions":"387"},{"ruleId":"372","severity":1,"message":"388","line":1,"column":10,"nodeType":"374","messageId":"375","endLine":1,"endColumn":25},{"ruleId":"372","severity":1,"message":"389","line":2,"column":21,"nodeType":"374","messageId":"375","endLine":2,"endColumn":23},{"ruleId":"372","severity":1,"message":"390","line":14,"column":10,"nodeType":"374","messageId":"375","endLine":14,"endColumn":15},{"ruleId":"372","severity":1,"message":"391","line":15,"column":10,"nodeType":"374","messageId":"375","endLine":15,"endColumn":32},{"ruleId":"372","severity":1,"message":"392","line":15,"column":34,"nodeType":"374","messageId":"375","endLine":15,"endColumn":43},{"ruleId":"384","severity":1,"message":"393","line":131,"column":8,"nodeType":"386","endLine":131,"endColumn":25,"suggestions":"394"},{"ruleId":"372","severity":1,"message":"395","line":1,"column":21,"nodeType":"374","messageId":"375","endLine":1,"endColumn":29},{"ruleId":"372","severity":1,"message":"396","line":2,"column":8,"nodeType":"374","messageId":"375","endLine":2,"endColumn":14},{"ruleId":"372","severity":1,"message":"397","line":3,"column":10,"nodeType":"374","messageId":"375","endLine":3,"endColumn":20},{"ruleId":"372","severity":1,"message":"398","line":3,"column":10,"nodeType":"374","messageId":"375","endLine":3,"endColumn":18},{"ruleId":"372","severity":1,"message":"399","line":3,"column":24,"nodeType":"374","messageId":"375","endLine":3,"endColumn":38},{"ruleId":"384","severity":1,"message":"400","line":22,"column":8,"nodeType":"386","endLine":22,"endColumn":26,"suggestions":"401"},{"ruleId":"372","severity":1,"message":"402","line":2,"column":10,"nodeType":"374","messageId":"375","endLine":2,"endColumn":15},{"ruleId":"384","severity":1,"message":"403","line":112,"column":8,"nodeType":"386","endLine":112,"endColumn":20,"suggestions":"404"},{"ruleId":"405","severity":1,"message":"406","line":49,"column":1,"nodeType":"407","endLine":51,"endColumn":2},{"ruleId":"368","replacedBy":"369"},{"ruleId":"370","replacedBy":"371"},{"ruleId":"408","severity":1,"message":"409","line":4,"column":13,"nodeType":"410","messageId":"411","endLine":4,"endColumn":7142},"no-native-reassign",["412"],"no-negated-in-lhs",["413"],"@typescript-eslint/no-unused-vars","'About' is assigned a value but never used.","Identifier","unusedVar","'Theme' is defined but never used.","'EditorDidMount' is defined but never used.","'setConfig' is assigned a value but never used.","'theme' is assigned a value but never used.","no-throw-literal","Expected an error object to be thrown.","ThrowStatement","object","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'strategyPath'. Either include it or remove the dependency array.","ArrayExpression",["414"],"'BacktestResults' is defined but never used.","'FC' is defined but never used.","'group' is defined but never used.","'ScaleContinuousNumeric' is defined but never used.","'ScaleTime' is defined but never used.","React Hook useEffect has a missing dependency: 'onStrategySelected'. Either include it or remove the dependency array.",["415"],"'useState' is defined but never used.","'styled' is defined but never used.","'StrictMode' is defined but never used.","'Dispatch' is defined but never used.","'SetStateAction' is defined but never used.","React Hook useEffect has missing dependencies: 'initialCurrency' and 'onChange'. Either include them or remove the dependency array.",["416"],"'Paper' is defined but never used.","React Hook useEffect has a missing dependency: 'initialBalance'. Either include it or remove the dependency array.",["417"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression","no-global-assign","no-unsafe-negation",{"desc":"418","fix":"419"},{"desc":"420","fix":"421"},{"desc":"422","fix":"423"},{"desc":"424","fix":"425"},"Update the dependencies array to be: [options, strategyPath]",{"range":"426","text":"427"},"Update the dependencies array to be: [currentStrategy, onStrategySelected]",{"range":"428","text":"429"},"Update the dependencies array to be: [amount, currency, initialCurrency, onChange]",{"range":"430","text":"431"},"Update the dependencies array to be: [exchangeId, initialBalance]",{"range":"432","text":"433"},[1928,1937],"[options, strategyPath]",[4198,4215],"[currentStrategy, onStrategySelected]",[857,875],"[amount, currency, initialCurrency, onChange]",[3314,3326],"[exchangeId, initialBalance]"]